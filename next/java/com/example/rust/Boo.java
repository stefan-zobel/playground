// Automatically generated by flapigen
package com.example.rust;


public final class Boo {
    public boolean equals(Object obj) {
        boolean equal = false;
        if (obj instanceof Boo)
          equal = ((Boo)obj).rustEq(this);
        return equal;
    }
    public int hashCode() {
        return (int)mNativeObj;
    }


    public Boo() {
        mNativeObj = init();
    }
    private static native long init();

    public final float test(boolean a0) {
        float ret = do_test(mNativeObj, a0);

        return ret;
    }
    private static native float do_test(long self, boolean a0);

    public final void setA(int a0) {
        do_setA(mNativeObj, a0);
    }
    private static native void do_setA(long self, int a0);

    public final int getA() {
        int ret = do_getA(mNativeObj);

        return ret;
    }
    private static native int do_getA(long self);

    private final boolean rustEq(Boo o) {
        long a0 = o.mNativeObj;
        boolean ret = do_rustEq(mNativeObj, a0);

        JNIReachabilityFence.reachabilityFence1(o);

        return ret;
    }
    private static native boolean do_rustEq(long self, long o);

    public static native short test_u8(short v);

    public static native byte test_i8(byte v);

    public static native int test_u16(int v);

    public static native short test_i16(short v);

    public static native int test_i32(int v);

    public static native long test_u32(long v);

    public static native long test_u64(long v);

    public static native long test_i64(long v);

    public static native float test_f32(float v);

    public static native double test_f64(double v);

    public static native short r_test_u8(short v) throws Exception;

    public static native byte r_test_i8(byte v) throws Exception;

    public static native int r_test_u16(int v) throws Exception;

    public static native short r_test_i16(short v) throws Exception;

    public static native int r_test_i32(int v) throws Exception;

    public static native long r_test_u32(long v) throws Exception;

    public static native long r_test_u64(long v) throws Exception;

    public static native long r_test_i64(long v) throws Exception;

    public static native float r_test_f32(float v) throws Exception;

    public static native double r_test_f64(double v) throws Exception;

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ Boo(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}