// Automatically generated by flapigen
package com.example.rust;


public final class Gamepad2 {

    public Gamepad2() {
        mNativeObj = init();
    }
    private static native long init();

    public final java.util.OptionalDouble getID(Code axis) {
        long a0 = axis.mNativeObj;
        axis.mNativeObj = 0;

        java.util.OptionalDouble ret = do_getID(mNativeObj, a0);
        java.lang.ref.Reference.reachabilityFence(axis);

        return ret;
    }
    private static native java.util.OptionalDouble do_getID(long self, long axis);

    public final GamepadId getID() {
        long ret = do_getID(mNativeObj);
        GamepadId convRet = new GamepadId(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_getID(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ Gamepad2(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}