// Automatically generated by flapigen
package com.example.rust;


public final class NavigationService {

    public NavigationService() {
        mNativeObj = init();
    }
    private static native long init();

    public final void subscribeOnUpdates(Session session) {
        long a0 = session.mNativeObj;

        do_subscribeOnUpdates(mNativeObj, a0);
        java.lang.ref.Reference.reachabilityFence(session);
    }
    private static native void do_subscribeOnUpdates(long self, long session);

    public final void callCallbacks() {
        do_callCallbacks(mNativeObj);
    }
    private static native void do_callCallbacks(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ NavigationService(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}