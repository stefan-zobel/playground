// Automatically generated by flapigen
package com.example.rust;


public final class TestArraysWithPrimitiveTypes {

    public TestArraysWithPrimitiveTypes() {
        mNativeObj = init();
    }
    private static native long init();

    public TestArraysWithPrimitiveTypes(int a0, long a1) {
        mNativeObj = init(a0, a1);
    }
    private static native long init(int a0, long a1);

    public final int [] get_ref() {
        int [] ret = do_get_ref(mNativeObj);

        return ret;
    }
    private static native int [] do_get_ref(long self);

    public final int [] clone_vec() {
        int [] ret = do_clone_vec(mNativeObj);

        return ret;
    }
    private static native int [] do_clone_vec(long self);

    public static native float [] arr_pass_through_float(float [] a);

    public static native double [] arr_pass_through_double(double [] a);

    public static native byte [] arr_pass_through_byte(byte [] a);

    public static native short [] arr_pass_through_short(short [] a);

    public static native int [] arr_pass_thorough(int [] a0);

    public static native long [] arr_pass_through_long(long [] a);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ TestArraysWithPrimitiveTypes(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}