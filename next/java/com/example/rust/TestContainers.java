// Automatically generated by flapigen
package com.example.rust;


public final class TestContainers {

    public TestContainers() {
        mNativeObj = init();
    }
    private static native long init();

    public final Foo [] getStructVec() {
        Foo [] ret = do_getStructVec(mNativeObj);

        return ret;
    }
    private static native Foo [] do_getStructVec(long self);

    public final Xyz [] getEmptyStructVec() {
        Xyz [] ret = do_getEmptyStructVec(mNativeObj);

        return ret;
    }
    private static native Xyz [] do_getEmptyStructVec(long self);

    public final java.lang.String [] getStringVec() {
        java.lang.String [] ret = do_getStringVec(mNativeObj);

        return ret;
    }
    private static native java.lang.String [] do_getStringVec(long self);

    public final void setStructVec(Foo [] a0) {
        do_setStructVec(mNativeObj, a0);
    }
    private static native void do_setStructVec(long self, Foo [] a0);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ TestContainers(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}